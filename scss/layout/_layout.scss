.sidebar {
  position: absolute;
  left: 0;
  top: 0;
  min-width: 206px;
  width: 206px;
  max-height: calc(100% - 4px);
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  z-index: 103;
  @include boxBorder;
  touch-action: none;
  .content {
    //class does not exist currently
    // opacity: 0.25;
    height: auto;
    overflow-y: scroll;
    @include scrollBar;
  }
  > .collapsible {
    margin-top: 2px;
  }
}

.page {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: calc(100% - 52px);
  user-select: none;
}

.draggable {
  z-index: 100;
  touch-action: none;
  &.dragging {
    cursor: grabbing;
    user-select: none;
    z-index: 150;
    > * {
      cursor: grabbing !important;
    }
  }
}

.dialog-box {
  margin: 2px;
  &.draggable {
    &.v-drag {
      @include boxBorder($border-color, $white, false, top bottom);
    }
    &.h-drag {
      @include boxBorder;
    }
  }
  .header {
    background-color: $black;
    justify-self: center;
    width: 100%;
    min-height: 20px;
    margin: 0px;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: grab;
    @include boxBorder($border-color, $white, false, bottom);
    @include dragger;
    .collapse-btn {
      @include collapseArrow;
    }
    .close-btn {
      @include closeX;
    }
  }
  .collapsible {
    flex: 0 1 auto;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
    position: relative;
  }
}

.settings-box {
  background-color: $extra-dark-gray;
  user-select: none;
  position: relative;
  z-index: 100;
  width: 206px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: center;
}

.smooth-shift {
  transition: top 0.05s;
  &.dragging {
    transition: none;
  }
}

/* Misc */

.tooltip {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  max-width: 150px;
  color: black;
  background: $tooltip-color;
  text-align: center;
  padding: 5px;
  align-self: flex-start;
  // transition: opacity 0.3s;
  // transition-delay: 0.3s;
  z-index: 1000;
  box-shadow: 2px 0px $tooltip-color, -2px 0px $tooltip-color,
    0px -2px $tooltip-color, 0px 2px $tooltip-color;
  &:after {
    //Speech bubble pointer
    content: "";
    display: inline-block;
    width: 2px;
    height: 2px;
    position: absolute;
    top: -2px;
    right: -2px;
    background: $tooltip-color;
    box-shadow: -2px -2px $tooltip-color, 0px -2px $tooltip-color,
      0px -4px $tooltip-color;
  }
  &.visible {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.3s;
    // transition-delay: 0.3s;
  }
  &.page-left {
    &:after {
      //Speech bubble pointer
      content: "";
      display: inline-block;
      width: 2px;
      height: 2px;
      position: absolute;
      top: -2px;
      left: -2px;
      background: $tooltip-color;
      box-shadow: 2px -2px $tooltip-color, 0px -2px $tooltip-color,
        0px -4px $tooltip-color;
    }
  }
  &.page-center {
    &:after {
      //Speech bubble pointer
      content: "";
      display: inline-block;
      width: 2px;
      height: 2px;
      position: absolute;
      top: -2px;
      left: calc(50% - 1px);
      background: $tooltip-color;
      box-shadow: 2px -2px $tooltip-color, -2px -2px $tooltip-color,
        0px -2px $tooltip-color, 0px -4px $tooltip-color;
    }
  }
}

/* Buttons */

.btn {
  display: flex;
  justify-content: center;
  align-items: center;
  background: $button-color;
  user-select: none;
  text-align: center;
  color: white;
  margin: 3px;
  opacity: 1;
  @include boxBorder;
  &:hover {
    cursor: pointer;
  }
  * {
    pointer-events: none; //btn children should not be interactable
  }
}

.spin-btn {
  position: relative;
  background-color: $darkest-gray;
  width: 16px;
  height: 18px;
  margin-left: 6px;
  overflow: hidden;
  display: flex;
  flex-flow: column nowrap;
  @include boxBorder;
  .channel-btn {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    width: 100%;
    height: 50%;
    color: white;
    margin: 0;
    cursor: pointer;
    .spin-content {
      pointer-events: none;
      line-height: 100%;
      transform: translateX(1px) translateY(1px);
    }
    &:hover {
      background: white;
      color: $darkest-gray;
    }
  }
}

/* Inputs */
// input[type="text"] {

// }

.input-label {
  margin-right: 8px;
}

.toggle {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  cursor: pointer;
  > * {
    pointer-events: none;
  }
  input {
    position: absolute;
    opacity: 0;
  }
  .checkmark {
    position: relative;
    height: 16px;
    width: 16px;
    background-color: $dark-gray;
    margin-right: 8px;
    box-shadow: 2px 0px $border-color, -2px 0px $border-color,
      0px -2px $border-color, 0px 2px $border-color;
  }
  &:hover {
    .checkmark {
      box-shadow: 2px 0px $white, -2px 0px $white, 0px -2px $white,
        0px 2px $white;
    }
  }
  input:checked ~ .checkmark {
    // background-color: $blue;
    &::after {
      content: "";
      position: absolute;
      width: 20px;
      height: 20px;
      top: -2px;
      left: -2px;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 -0.5 10 10' shape-rendering='crispEdges'%3E%3Cpath stroke='%23ffffff' d='M8 0h2M7 1h1M9 1h1M6 2h1M8 2h1M3 3h1M5 3h1M7 3h1M2 4h1M4 4h1M7 4h1M1 5h1M6 5h1M2 6h1M6 6h1M3 7h1M5 7h1M4 8h1' /%3E%3Cpath stroke='%23000000' d='M8 1h1M7 2h1M6 3h1M3 4h1M5 4h2M2 5h4M3 6h3M4 7h1' /%3E%3C/svg%3E");
    }
  }
}

.slider {
  height: 16px;
  background: $darkest-gray;
  outline: none;
  cursor: pointer;
  &::-webkit-slider-thumb {
    width: 16px;
    height: 16px;
    background: #ffffff;
  }
  &::-moz-range-thumb {
    width: 16px;
    height: 16px;
    background: #ffffff;
  }
  &:disabled {
    cursor: not-allowed;
    background: $neutral-gray;
    &::-webkit-slider-thumb {
      background: rgb(200, 200, 200);
    }
    &::-moz-range-thumb {
      background: rgb(200, 200, 200);
    }
  }
}
